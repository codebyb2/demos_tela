<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>C Law 2025 - Autenticando</title>
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-black: #000000;
            --primary-blue: #0066FF;
            --text-dark: #1a1a1a;
            --text-gray: #666666;
            --text-light: #999999;
            --background: #ffffff;
            --surface: #f8f9fa;
            --border: #e5e5e5;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--background);
            color: var(--text-dark);
            line-height: 1.6;
            min-height: 100vh;
            padding: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            max-width: 450px;
            width: 100%;
            text-align: center;
            padding: 1.5rem 1rem;
        }

        /* Logo */
        .logo-section {
            margin-bottom: 1.5rem;
        }

        .logo-img {
            height: clamp(28px, 5.5vw, 42px);
            width: auto;
        }

        /* Loading Content */
        .loading-content {
            margin-bottom: 1.5rem;
        }

        .loading-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            display: block;
            animation: bounce 1s infinite;
        }

        .loading-title {
            font-size: clamp(1.5rem, 4vw, 1.75rem);
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 0.75rem;
            line-height: 1.3;
        }

        .loading-message {
            font-size: clamp(0.875rem, 2.5vw, 1rem);
            color: var(--text-gray);
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }

        /* Loading Spinner */
        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid var(--surface);
            border-top: 4px solid var(--primary-blue);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        /* Footer */
        .footer {
            font-size: 0.875rem;
            color: var(--text-light);
            margin-top: 2rem;
        }

        /* Animations */
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            60% {
                transform: translateY(-5px);
            }
        }

        @keyframes fadeIn {
            from { 
                opacity: 0; 
                transform: translateY(20px); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0); 
            }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        /* Responsive */
        @media (max-width: 768px) {
            body {
                padding: 0.5rem;
                align-items: flex-start;
                padding-top: 15vh;
            }
            
            .container {
                padding: 1rem 0.5rem;
            }

            .logo-section {
                margin-bottom: 1.5rem;
            }

            .loading-icon {
                font-size: 2.5rem;
                margin-bottom: 1rem;
            }
        }

        @media (max-width: 480px) {
            body {
                padding-top: 10vh;
            }

            .container {
                padding: 0.5rem;
            }

            .logo-img {
                height: 40px;
            }

            .logo-section {
                margin-bottom: 1rem;
            }

            .loading-icon {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container fade-in">
        <!-- Logo -->
        <div class="logo-section">
            <img src="https://www.tela.com/_vercel/image?url=%2Ftela-logo.png&w=320&q=100" alt="Tela Logo" class="logo-img">
        </div>
        
        <!-- Loading Content -->
        <div class="loading-content">
            <div class="loading-spinner"></div>
            
            <h1 class="loading-title">Autenticando</h1>
            
            <p class="loading-message">
                Processando seu login com LinkedIn...
            </p>
            
            <p style="font-size: 0.875rem; color: var(--text-light);">
                Você será redirecionado automaticamente
            </p>
        </div>
        
        <!-- Footer -->
        <div class="footer">
            &copy; 2025 Tela. Todos os direitos reservados.
        </div>
    </div>

    <script>
        // Animação de entrada
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelector('.container').classList.add('fade-in');
            
            // Processar callback do LinkedIn
            processLinkedInCallback();
        });

        function processLinkedInCallback() {
            // Extrair parâmetros da URL
            const urlParams = new URLSearchParams(window.location.search);
            const code = urlParams.get('code');
            const state = urlParams.get('state');
            const error = urlParams.get('error');
            
            // Se há erro na autenticação
            if (error) {
                console.error('LinkedIn auth error:', error);
                window.location.href = '/error?message=' + encodeURIComponent('Erro na autenticação com LinkedIn. Tente novamente.');
                return;
            }
            
            // Se não há code ou state, redirecionar para erro
            if (!code || !state) {
                console.error('Missing code or state parameter');
                window.location.href = '/error?message=' + encodeURIComponent('Parâmetros de autenticação inválidos.');
                return;
            }
            
            // Fazer requisição POST para processar callback
            fetch('/callback', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    code: code,
                    state: state
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Sucesso - redirecionar para página de demonstração
                    console.log('Authentication successful:', data.profile);
                    window.location.href = data.redirectUrl;
                } else {
                    // Erro na autenticação
                    console.error('Callback error:', data.error);
                    window.location.href = '/error?message=' + encodeURIComponent(data.error || 'Erro na autenticação.');
                }
            })
            .catch(error => {
                console.error('Network error:', error);
                window.location.href = '/error?message=' + encodeURIComponent('Erro de conectividade. Tente novamente.');
            });
        }
    </script>
</body>
</html> 